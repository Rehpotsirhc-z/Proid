#+title: Proid
#+author: Christopher

* Introduction
Proid is a command-line tool that allows you to hide and show windows in X.

* Installation
The easiest way to build install proid is to use [[https://docs.haskellstack.org/en/stable/install_and_upgrade/][stack]]:

After you have installed stack, use the following command to compile from source:

#+begin_src sh
stack setup
stack install
#+end_src sh

~stack setup~ will automatically download the GHC compiler if you don't have it. ~stack install~ will install the proid executable into =~/.local/bin=, which you should add to your PATH.

** Arch Linux
If you are on Arch Linux, you can find Proid in the [[https://aur.archlinux.org/packages/proid][AUR]]. Simply clone the repository and then run ~makepkg -si~, or install it using an AUR helper like paru.

* Dependencies
The only dependency that is required for Proid to run is xdo. However, you will need Stack to build Proid.

* Usage
To hide the current window, you need to run ~proid hide~. If you run it in a terminal window, it will hide the terminal. It is recommended to bind the proid options to a keybinding so that it can work on any program.

Proid shows windows in the opposite order that you hid them in. It will show the most recently hidden one first. You can show windows using ~proid show~.

Sometimes, you may need two lists for windows to hide. You can use ~proid deshide~ to hide a window, saving it to a special list. The next time you do ~proid show~, that window will not show and it will instead show the window hidden normally. You can then show the special windows by doing ~proid desshow~.

This is useful when you want to switch between seeing two windows. If you were to hide them both with ~proid hide~, you would have to show both of them and then hide one to see it. With ~proid deshide~, you will be able to make one of them special and one of them normal, allowing you to alternate which one you want to be shown.

* License
GNU GPLv3
